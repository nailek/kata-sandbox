<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="c:\program files\microsoft visual studio\2022\enterprise\team tools\static analysis tools\fxcop\Xml\CodeAnalysisReport.xsl"?>
<FxCopReport Version="17.0">
 <Targets>
  <Target Name="C:\inetpub\Git\V5\Kata\kata-sandbox\tick-tack-toe\TickTackToe\Kata.XUnit.Tests\bin\Debug\Kata.XUnit.Tests.dll">
   <Modules>
    <Module Name="kata.xunit.tests.dll">
     <Messages>
      <Message TypeName="AssembliesShouldHaveValidStrongNames" Category="Microsoft.Design" CheckId="CA2210" Status="Active" Created="2023-07-05 12:33:05Z" FixCategory="NonBreaking">
       <Issue Name="NoStrongName" Certainty="95" Level="CriticalError">Sign 'Kata.XUnit.Tests.dll' with a strong name key.</Issue>
      </Message>
      <Message TypeName="MarkAssembliesWithClsCompliant" Category="Microsoft.Design" CheckId="CA1014" Status="Active" Created="2023-07-05 12:33:05Z" FixCategory="NonBreaking">
       <Issue Certainty="95" Level="Error">Mark 'Kata.XUnit.Tests.dll' with CLSCompliant(true) because it exposes externally visible types.</Issue>
      </Message>
     </Messages>
     <Namespaces>
      <Namespace Name="Kata.XUnit.Tests">
       <Types>
        <Type Name="HelloWorldTests" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#HelloWorld_Should_SayHelloWorld()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2023-07-05 12:33:05Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error" Path="C:\inetpub\Git\V5\Kata\kata-sandbox\tick-tack-toe\TickTackToe\Kata.XUnit.Tests" File="HelloWorldTests.cs" Line="11">Remove the underscores from member name 'HelloWorldTests.HelloWorld_Should_SayHelloWorld()'.</Issue>
            </Message>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2023-07-05 12:33:05Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Warning" Path="C:\inetpub\Git\V5\Kata\kata-sandbox\tick-tack-toe\TickTackToe\Kata.XUnit.Tests" File="HelloWorldTests.cs" Line="11">The 'this' parameter (or 'Me' in Visual Basic) of 'HelloWorldTests.HelloWorld_Should_SayHelloWorld()' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
      <Namespace Name="Kata.XUnit.Tests.Advanced">
       <Types>
        <Type Name="BusinessControllerTests" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#AutoFixture_ShouldBeAbleToAutoMock_DirectDependencies_WithNSubstitute(Kata.Advanced.IBusinessEntityService,Kata.Advanced.BusinessController,Kata.Advanced.BusinessEntity)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="sut" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2023-07-05 12:33:05Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="C:\inetpub\Git\V5\Kata\kata-sandbox\tick-tack-toe\TickTackToe\Kata.XUnit.Tests\Advanced" File="BusinessControllerTests.cs" Line="22">In method 'BusinessControllerTests.AutoFixture_ShouldBeAbleToAutoMock_DirectDependencies_WithNSubstitute(IBusinessEntityService, BusinessController, BusinessEntity)', correct the spelling of 'sut' in parameter name 'sut' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2023-07-05 12:33:05Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error" Path="C:\inetpub\Git\V5\Kata\kata-sandbox\tick-tack-toe\TickTackToe\Kata.XUnit.Tests\Advanced" File="BusinessControllerTests.cs" Line="22">Remove the underscores from member name 'BusinessControllerTests.AutoFixture_ShouldBeAbleToAutoMock_DirectDependencies_WithNSubstitute(IBusinessEntityService, BusinessController, BusinessEntity)'.</Issue>
            </Message>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2023-07-05 12:33:05Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Warning" Path="C:\inetpub\Git\V5\Kata\kata-sandbox\tick-tack-toe\TickTackToe\Kata.XUnit.Tests\Advanced" File="BusinessControllerTests.cs" Line="22">The 'this' parameter (or 'Me' in Visual Basic) of 'BusinessControllerTests.AutoFixture_ShouldBeAbleToAutoMock_DirectDependencies_WithNSubstitute(IBusinessEntityService, BusinessController, BusinessEntity)' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2023-07-05 12:33:05Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\inetpub\Git\V5\Kata\kata-sandbox\tick-tack-toe\TickTackToe\Kata.XUnit.Tests\Advanced" File="BusinessControllerTests.cs" Line="25">In externally visible method 'BusinessControllerTests.AutoFixture_ShouldBeAbleToAutoMock_DirectDependencies_WithNSubstitute(IBusinessEntityService, BusinessController, BusinessEntity)', validate parameter 'service' before using it.</Issue>
            </Message>
            <Message Id="1" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2023-07-05 12:33:05Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\inetpub\Git\V5\Kata\kata-sandbox\tick-tack-toe\TickTackToe\Kata.XUnit.Tests\Advanced" File="BusinessControllerTests.cs" Line="29">In externally visible method 'BusinessControllerTests.AutoFixture_ShouldBeAbleToAutoMock_DirectDependencies_WithNSubstitute(IBusinessEntityService, BusinessController, BusinessEntity)', validate parameter 'sut' before using it.</Issue>
            </Message>
            <Message Id="2" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2023-07-05 12:33:05Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="C:\inetpub\Git\V5\Kata\kata-sandbox\tick-tack-toe\TickTackToe\Kata.XUnit.Tests\Advanced" File="BusinessControllerTests.cs" Line="25">In externally visible method 'BusinessControllerTests.AutoFixture_ShouldBeAbleToAutoMock_DirectDependencies_WithNSubstitute(IBusinessEntityService, BusinessController, BusinessEntity)', validate parameter 'expected' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
      <Namespace Name="Kata.XUnit.Tests.AutoDataAttributes">
       <Types>
        <Type Name="AutoConfiguredNSubstituteDataAttribute" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="AvoidUnsealedAttributes" Category="Microsoft.Performance" CheckId="CA1813" Status="Active" Created="2023-07-05 12:33:05Z" FixCategory="Breaking">
           <Issue Certainty="75" Level="Warning">Seal 'AutoConfiguredNSubstituteDataAttribute', if possible.</Issue>
          </Message>
          <Message TypeName="MarkAttributesWithAttributeUsage" Category="Microsoft.Design" CheckId="CA1018" Status="Active" Created="2023-07-05 12:33:05Z" FixCategory="Breaking">
           <Issue Name="Inherited" Certainty="75" Level="Warning">Even though attribute 'AutoConfiguredNSubstituteDataAttribute' inherits AttributeUsage from its base type, you should consider explicitly specifying AttributeUsage on the type to improve code readability and documentation.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="AutoNSubstituteDataAttribute" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="AvoidUnsealedAttributes" Category="Microsoft.Performance" CheckId="CA1813" Status="Active" Created="2023-07-05 12:33:05Z" FixCategory="Breaking">
           <Issue Certainty="75" Level="Warning">Seal 'AutoNSubstituteDataAttribute', if possible.</Issue>
          </Message>
          <Message TypeName="MarkAttributesWithAttributeUsage" Category="Microsoft.Design" CheckId="CA1018" Status="Active" Created="2023-07-05 12:33:05Z" FixCategory="Breaking">
           <Issue Name="Inherited" Certainty="75" Level="Warning">Even though attribute 'AutoNSubstituteDataAttribute' inherits AttributeUsage from its base type, you should consider explicitly specifying AttributeUsage on the type to improve code readability and documentation.</Issue>
          </Message>
         </Messages>
        </Type>
       </Types>
      </Namespace>
     </Namespaces>
    </Module>
   </Modules>
  </Target>
 </Targets>
 <Rules>
  <Rule TypeName="AssembliesShouldHaveValidStrongNames" Category="Microsoft.Design" CheckId="CA2210">
   <Name>Assemblies should have valid strong names</Name>
   <Description>Either the assembly has no strong name, an invalid one, or the strong name is valid only because of the computer configuration. The assembly should not be deployed in this state. The most common causes of this are: 1) The assembly's contents were modified after it was signed. 2) The signing process failed. 3) The assembly was delay-signed. 4) A registry key existed that allowed the check to pass (where it would not have otherwise).</Description>
   <Resolution Name="NoStrongName">Sign {0} with a strong name key.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182127.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">CriticalError</MessageLevel>
   <File Name="designrules.dll" Version="17.0.0.0" />
  </Rule>
  <Rule TypeName="AvoidUnsealedAttributes" Category="Microsoft.Performance" CheckId="CA1813">
   <Name>Avoid unsealed attributes</Name>
   <Description>Seal attribute types for improved performance. Sealing attribute types speeds up performance during reflection on custom attributes.</Description>
   <Resolution Name="Default">Seal {0}, if possible.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182267.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="performancerules.dll" Version="17.0.0.0" />
  </Rule>
  <Rule TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704">
   <Name>Identifiers should be spelled correctly</Name>
   <Description>The individual words that make up an identifier should not be abbreviated and should be spelled correctly. If this rule generates a false positive on a term that should be recognized, add the word to the FxCop custom dictionary.</Description>
   <Resolution Name="MemberParameter">In method {0}, correct the spelling of '{1}' in parameter name {2} or remove it entirely if it represents any sort of Hungarian notation.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/bb264492.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="75">CriticalWarning</MessageLevel>
   <File Name="namingrules.dll" Version="17.0.0.0" />
  </Rule>
  <Rule TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707">
   <Name>Identifiers should not contain underscores</Name>
   <Description>Do not use underscores when specifying identifiers. Some generated Visual Studio identifiers for applications contain underscore characters. Underscore characters should generally be avoided in public identifiers.</Description>
   <Resolution Name="Member">Remove the underscores from member name {0}.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182245.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="namingrules.dll" Version="17.0.0.0" />
  </Rule>
  <Rule TypeName="MarkAssembliesWithClsCompliant" Category="Microsoft.Design" CheckId="CA1014">
   <Name>Mark assemblies with CLSCompliantAttribute</Name>
   <Description>Assemblies should explicitly state their CLS compliance using the CLSCompliant attribute. An assembly without this attribute is not CLS-compliant. Assemblies, modules, and types can be CLS-compliant even if some parts of the assembly, module, or type are not CLS-compliant. The following rules apply: 1) If the element is marked CLSCompliant, any noncompliant members must have the CLSCompliant attribute present with its argument set to false. 2) A comparable CLS-compliant alternative member must be supplied for each member that is not CLS-compliant.</Description>
   <Resolution Name="Default">Mark {0} with CLSCompliant(true) because it exposes externally visible types.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182156.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="designrules.dll" Version="17.0.0.0" />
  </Rule>
  <Rule TypeName="MarkAttributesWithAttributeUsage" Category="Microsoft.Design" CheckId="CA1018">
   <Name>Mark attributes with AttributeUsageAttribute</Name>
   <Description>The AttributeUsage attribute specifies the targets that are valid for the attribute (see System.AttributeTargets), whether an attribute can appear on a target more than once, and whether the attribute is inheritable.</Description>
   <Resolution Name="Inherited">Even though attribute {0} inherits AttributeUsage from its base type, you should consider explicitly specifying AttributeUsage on the type to improve code readability and documentation.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182158.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error, Warning</MessageLevel>
   <File Name="designrules.dll" Version="17.0.0.0" />
  </Rule>
  <Rule TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822">
   <Name>Mark members as static</Name>
   <Description>Methods which do not access instance data or call instance methods can be marked as static (Shared in Visual Basic). After doing so, the compiler will emit non-virtual call sites to these members which will prevent a check at runtime for each call that ensures the current object pointer is non-null. This can result in a measurable performance gain for performance-sensitive code. In some cases, the failure to access the current object instance represents a correctness issue.</Description>
   <Resolution Name="Default">The 'this' parameter (or 'Me' in Visual Basic) of {0} is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms245046.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Warning</MessageLevel>
   <File Name="performancerules.dll" Version="17.0.0.0" />
  </Rule>
  <Rule TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062">
   <Name>Validate arguments of public methods</Name>
   <Description>All reference arguments passed to externally visible methods should be checked against null (Nothing in VB). If appropriate, throw a System.ArgumentNullException when the argument is null.</Description>
   <Resolution Name="Default">In externally visible method {0}, validate parameter '{1}' before using it.</Resolution>
   <Owner>RuleOwner</Owner>
   <Url>http://msdn.microsoft.com/library/ms182182.aspx</Url>
   <Email />
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="dataflowrules.dll" Version="17.0.0.0" />
  </Rule>
 </Rules>
 <Localized>
  <String Key="Category">Category</String>
  <String Key="Certainty">Certainty</String>
  <String Key="CollapseAll">Collapse All</String>
  <String Key="CheckId">Check Id</String>
  <String Key="Error">Error</String>
  <String Key="Errors">error(s)</String>
  <String Key="ExpandAll">Expand All</String>
  <String Key="Help">Help</String>
  <String Key="Line">Line</String>
  <String Key="Messages">message(s)</String>
  <String Key="LocationNotStoredInPdb">[Location not stored in Pdb]</String>
  <String Key="Project">Project</String>
  <String Key="Resolution">Resolution</String>
  <String Key="Rule">Rule</String>
  <String Key="RuleFile">Rule File</String>
  <String Key="RuleDescription">Rule Description</String>
  <String Key="Source">Source</String>
  <String Key="Status">Status</String>
  <String Key="Target">Target</String>
  <String Key="Warning">Warning</String>
  <String Key="Warnings">warning(s)</String>
  <String Key="ReportTitle">Code Analysis Report</String>
 </Localized>
</FxCopReport>
